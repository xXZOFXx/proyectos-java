/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import javax.swing.JOptionPane;

/**
 *
 * @author e-zof
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMenu = new javax.swing.JLabel();
        btnNewton = new javax.swing.JButton();
        btnOhmMetodos = new javax.swing.JButton();
        btnSumaResta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMenu.setText("Menu Zuñiga");

        btnNewton.setText("Ley de Newton");
        btnNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewtonActionPerformed(evt);
            }
        });

        btnOhmMetodos.setText("Ley Ohm Meotodo");
        btnOhmMetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOhmMetodosActionPerformed(evt);
            }
        });

        btnSumaResta.setText("Sumar y Restar");
        btnSumaResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaRestaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addComponent(lblMenu)
                .addGap(169, 169, 169))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNewton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOhmMetodos, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(btnSumaResta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblMenu)
                .addGap(29, 29, 29)
                .addComponent(btnNewton)
                .addGap(31, 31, 31)
                .addComponent(btnOhmMetodos)
                .addGap(32, 32, 32)
                .addComponent(btnSumaResta)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //metodo o funcion es un mini programa llamado fuera de un main
    // hay dos tipos de metodos principales 
    //metodo vacio o void, solo porcesa instrucciones, no tiene retorno
    //metodo o funcion para calcular fuerza f=masa * aceleración
    public void fuerza() { // es publico y es vacio (esto es una funcion como lo que vimos en c# es una funcion)  

        //cuerpo del miniPrograma
        String ventanaMasa = JOptionPane.showInputDialog("Captura masa");

        float masa = Float.parseFloat(ventanaMasa);

        String ventanaAceleracion = JOptionPane.showInputDialog("Captura aceleración");

        float aceleracion = Float.parseFloat(ventanaAceleracion);

        float fuerza = masa * aceleracion;

        JOptionPane.showMessageDialog(null, "la fuerza es:" + fuerza);

    }

    //metodo tipo retorno para calcular la masa  = fuerza/aceleración
    public float masa() {//este metodo/ funcion si regresa algo  debe de tener un conetedor para poder imprimor

        String ventanaFuerza = JOptionPane.showInputDialog("Captura Fuerza");

        float fuerza = Float.parseFloat(ventanaFuerza);

        String ventanaAceleracion = JOptionPane.showInputDialog("Captura aceleración ");

        float aceleracion = Float.parseFloat(ventanaAceleracion);

        return fuerza / aceleracion;

    }

    //funcion lewy newton
    public void leyNewton() { //inicia funion o metodo que es vacio (void) o sea no tiene retorno

        //menu para leyes de newton
        int menu;

        do {//inicia do   

            String ventanaMenuLeyNewton = JOptionPane.showInputDialog("Menu Ley Newton \n\n 1.Fuerza \n\n 2.Masa \n\n 3.salir");
            menu = Integer.parseInt(ventanaMenuLeyNewton); //Guarada opcion de menu

            switch (menu) {//inicia switch

                case 1:
                    //llamada del metodo fuerza
                    fuerza();
                    break;

                case 2:
                    //llamada de la funcion masa 
                    JOptionPane.showMessageDialog(null, "la masa es " + masa());
                    break;

                case 3:
                    JOptionPane.showMessageDialog(null, "Finaliza sección. Gracias ");
                    break;

            }//termina switch

        } while (menu != 3);

    }

    //metodo para calcular ley de ohm voltaje = corriente * recistencia
    public void voltaje() { // es publico y es vacio (esto es una funcion como lo que vimos en c# es una funcion)  

        //cuerpo del miniPrograma
        String ventanaCorriente = JOptionPane.showInputDialog("Captura Corriente");

        float corriente = Float.parseFloat(ventanaCorriente);

        String ventanaResistencia = JOptionPane.showInputDialog("Captura Resistencia");

        float resistencia = Float.parseFloat(ventanaResistencia);

        float voltaje = corriente * resistencia;

        JOptionPane.showMessageDialog(null, "el voltaje  es:" + voltaje);

    }

    //metodo para calcular la corriente corriente = voltraje/ resistencia 
    public float corriente() {//este metodo/ funcion si regresa algo  debe de tener un conetedor para poder imprimor

        String ventanavoltaje = JOptionPane.showInputDialog("Captura Voltaje");

        float voltaje = Float.parseFloat(ventanavoltaje);

        String ventanaResistencia = JOptionPane.showInputDialog("Captura Resistencia electrica ");

        float resistencia = Float.parseFloat(ventanaResistencia);

        return voltaje / resistencia;

    }

    //funcion lewy newton
    public void leyOhm() { //inicia funion o metodo que es vacio (void) o sea no tiene retorno

        //menu para leyes de Ohm
        int menu;

        do {//inicia do   

            String ventanaMenuLeyNewton = JOptionPane.showInputDialog("Menu Ley Ohm \n\n 1.voltaje \n\n 2.corriente \n\n 3.salir");
            menu = Integer.parseInt(ventanaMenuLeyNewton); //Guarada opcion de menu

            switch (menu) {//inicia switch

                case 1:
                    //llamada del metodo fuerza
                    voltaje();
                    break;

                case 2:
                    //llamada de la funcion masa 
                    JOptionPane.showMessageDialog(null, "la corriente es " + corriente());
                    break;

                case 3:
                    JOptionPane.showMessageDialog(null, "Finaliza sección. Gracias ");
                    break;

            }//termina switch

        } while (menu != 3);

    }

    //funciones para sumar y restar
    public void suma() { //iniciamos la funcion vacia llamada suma

        int sumaTotal;

        String capturaSuma = JOptionPane.showInputDialog("Captura primer número de suma: ");

        int numeroUno = Integer.parseInt(capturaSuma);

        String capturaSumaDos = JOptionPane.showInputDialog("Ingresa número dos de la suma: ");
        int numeroDos = Integer.parseInt(capturaSumaDos);

        sumaTotal = numeroUno + numeroDos;

        JOptionPane.showMessageDialog(null, "La suma de " + numeroUno + " y " + numeroDos + " es: " + sumaTotal);

    }

    public void resta() { //iniciamos la funcion resta

        int restaTotal;

        String ventanaRestaUno = JOptionPane.showInputDialog("ingresa número uno de la resta");

        int numeroUnoResta = Integer.parseInt(ventanaRestaUno);

        String VentanaRestaDos = JOptionPane.showInputDialog("Captura número dos de la resta");

        int numeroDosResta = Integer.parseInt(VentanaRestaDos);

        restaTotal = numeroUnoResta - numeroDosResta;

        JOptionPane.showMessageDialog(null, "La resta de " + numeroUnoResta + " y " + numeroDosResta + " es: " + restaTotal);

    }

    public void sumaResta() { // inicia la funcion que contiene el menu

        int menu;

        do {
            String ventanaSumaResta = JOptionPane.showInputDialog("1. Sumar \n\n 2. Restar \n\n 3.Salir");

            menu = Integer.parseInt(ventanaSumaResta);

            switch (menu) {

                case 1:

                    suma();
                    break;

                case 2:

                    resta();
                    break;

                case 3:

                    JOptionPane.showMessageDialog(null, "Finaliza el menu. Gracias");
                    break;

            }

        } while (menu != 3);

    }

    private void btnNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewtonActionPerformed

        leyNewton(); //llamas a la funcion ley newton para poderla ejecutar en el boton


    }//GEN-LAST:event_btnNewtonActionPerformed

    private void btnOhmMetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOhmMetodosActionPerformed

        leyOhm(); //llamamos la funcion ley de ohm 


    }//GEN-LAST:event_btnOhmMetodosActionPerformed

    private void btnSumaRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaRestaActionPerformed
        // TODO add your handling code here:

        sumaResta();


    }//GEN-LAST:event_btnSumaRestaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewton;
    private javax.swing.JButton btnOhmMetodos;
    private javax.swing.JButton btnSumaResta;
    private javax.swing.JLabel lblMenu;
    // End of variables declaration//GEN-END:variables
}
